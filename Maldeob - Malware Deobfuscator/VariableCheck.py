import sys, argparse, re, jsbeautifier

def VariableCheck(Converted_Text):
    c = 0
    a = 0
    Var_Array = []
    
    #Pulls and stores variable names in array. 
    for line in Converted_Text.splitlines():
        VarName_Regex1 = r"var\s(.*?)\s\=\s"
        VarName_Match1 = re.search(VarName_Regex1, line, re.MULTILINE)

        VarName_Regex2 = r"var\s(.*?)\="
        VarName_Match2 = re.search(VarName_Regex2, line, re.MULTILINE)

        VarName_Regex3 = r"var\s(.*?)\=\s"
        VarName_Match3 = re.search(VarName_Regex3, line, re.MULTILINE)

        VarName_Regex4 = r"var\s(.*?)\s\="
        VarName_Match4 = re.search(VarName_Regex4, line, re.MULTILINE)

        if VarName_Match1:
            VarName = VarName_Match1.group(1)
        elif VarName_Match2:
            VarName = VarName_Match2.group(1)  
        elif VarName_Match3:
            VarName = VarName_Match3.group(1)
        elif VarName_Match4:
            VarName = VarName_Match4.group(1)
        VarName = str(VarName.strip())
        
        if VarName in Var_Array:
            pass
        else:
            Var_Array.append(VarName)

    #Checks each variable pulled and attempts to see if it is the only one initialized.
    while c < len(Var_Array):
        Var_Array_Name = Var_Array[a]
        
        
        if Converted_Text.count(Var_Array[a]) == 1:        
            text_after = re.sub(rf"(^var\s{Var_Array_Name}.*?\;$)", '', Converted_Text, flags=re.M)
            Converted_Text = text_after

        c += 1
        a += 1
    return(Converted_Text)